namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

start =
  element data_element_set {
    
    ## Each set has a unique identifier of the format "RDES[0-9]+" (e.g., "RDES42") and a textual name.
    attribute id { xsd:string { pattern='RDES\d+' } },
    element name { text },
    (attribute url { xsd:anyURI }
     & element description { text }
     & authors+
     & history+),
    element elements { data_element+ }
  }

## Each data element or set can have 0 or more individual and/or organizational authors
authors = person*, org*
data_element =
  
  ## Each data element has a unique identifier of the format "RDE[0-9]+" (e.g., "RDE54") and a textual name.
  element element {
    attribute id { xsd:string { pattern='RDE\d+' } },
    attribute shortName { xsd:Name },
    element name { text },
    element definition {
       text >> a:documentation [ "Each CDE must have a definition." ]
    },
    authors?,
    element version {
        attribute versionNumber { xsd:positiveInteger },
        status_attrs,
        empty
    },
    history?,
    index_codes?,
    element question { text },
    (element instructions { text }?
     & element images { image+ }?),
    (
        element integer_values {
            attribute min { xsd:integer }?,
            attribute max { xsd:integer >> a:documentation ["Must be greater than the min attribute"] }?,
            attribute step { xsd:integer >> a:documentation ["Default is 1"] }?,
            attribute unit { xsd:Name }?
        } 
        | element float_values {
            attribute min { xsd:float },
            attribute max { xsd:float >> a:documentation ["Must be greater than the min attribute"] },
            attribute step { xsd:integer },
            attribute unit { xsd:Name },
            empty
        } 
        | element boolean_values { empty }
        | element value_set {
            element value {
                attribute value { xsd:Name },
                element name { text },
                element definition { text }?,
                element images { image+ }?,
                index_codes?
            }+
        }
    )
  }
person =
  element person {
    element name { text },
    (element orcid_id { text }?
     & element twitter_handle { text }*
     & element url { text }*
     & element role {
         "author" | "editor" | "translator" | "reviewer" | "contributor"
       }*)
  }
org =
  element organization {
    element name { text }
    & element abbreviation { text }?
    & element url { xsd:anyURI }?
    & element comment { text }?
    & element role {
        "contributor" | "sponsor" | "translator" | "reviewer" | "author"
      }*
  }
index_codes =
  element index_codes {
    element index_code {
      attribute system { xsd:anyURI },
      attribute code { xsd:normalizedString },
      attribute href { xsd:anyURI }?,
      attribute display { text }?
    }+
  }
image =
  element image {
    attribute url { xsd:anyURI }
    & attribute height { xsd:positiveInteger }?
    & attribute width { xsd:positiveInteger }?
    & element caption { text }?
    & element rights { text }?
    & element source { text }?
    & authors?
  }
status_attrs = 
    attribute date { xsd:date },
    attribute status {
      "proposed" | "approved" | "published" | "deprecated"
    }
history =
  element event {
    status_attrs
  }*
